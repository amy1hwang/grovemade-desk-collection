<!-- /templates/product.liquid -->
{% comment %}

  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html

{% endcomment %}
{% include 'breadcrumb' %}

<div itemscope itemtype="http://schema.org/Product" class="single-product font-din">

  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">

  {% comment %}
    Get first variant, or deep linked one
  {% endcomment %}
  {% assign current_variant = product.selected_or_first_available_variant %}


  <div class="container">
    <div class="row">
      <div class="col-xs-7">
        {% assign featured_image = current_variant.featured_image | default: product.featured_image %}

        <div class="swiper-container" data-product-swiper>
          <div class="swiper-wrapper">
            {% for image in product.images offset:2 %}
              <div class="swiper-slide product-slide">
                  <img class="full-width-block" src="{{ image | img_url: 'large' }}" alt="{{ image.alt | escape }}" id="ProductPhotoImg">
              </div>
            {% endfor %}
          </div>
          <div class="swiper-pagination">
          </div>
        </div>
        <!-- /swiper -->
      </div>
      <!-- /image -->

      <div class="col-xs-5 product-content">
        {% include 'product-form' %}
      </div>
      <!-- /content -->
    </div>
  </div>

  <div class="grid product-single">
    <div class="grid__item large--one-half">


      <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
        <meta itemprop="priceCurrency" content="{{ shop.currency }}">

        <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">


      </div>

    </div>
  </div>

</div>

{% comment %}
  To take advantage of a callback on the select dropdown, add option_selection.js
  and customize the JS in timber.productPage as needed.

  Currently, timber.productPage does the following:
    - Hides your <select> tag from above
    - Breaks out the product variants into separate product options, if more than one exists
    - Generates a <select> tag for each product option
    - Enables/disables elements based on variant availability

  Callback notes:
    - Keep the callback available to the global scope (window.selectCallback) so that advanced
      addons can override it.
      * E.g. multiple currencies http://docs.shopify.com/manual/configuration/store-customization/currencies-and-translations/currencies/how-to-toggle-between-two-currencies
{% endcomment %}
{{ 'option_selection.js' | shopify_asset_url | script_tag }}
<script>
  var selectCallback = function(variant, selector) {
    timber.productPage({
      money_format: "{{ shop.money_format }}",
      variant: variant,
      selector: selector
    });
  };

  jQuery(function($) {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label for="productSelect-option-0">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });
</script>


<div class="product-collection font-din">
  <hr>
  <a href="{{ collection.url }}">
    <h3>
      About The Collection<br>{{ collection.title }}
    </h3>
  </a>
  <p>
    {{ collection.description }}
  </p>
</div>